{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzju\\\\questioning\\\\frontend\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, ListGroup, Badge, Form } from 'react-bootstrap';\nimport Upload from './Upload';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  processedFiles,\n  onClearSession,\n  isLoading,\n  sessionId,\n  setSessionId,\n  setProcessedFiles,\n  setIsLoading\n}) => {\n  _s();\n  const [enableOCR, setEnableOCR] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ocr-switch\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"switch\",\n        id: \"ocr-switch\",\n        label: \"Enable OCR\",\n        checked: enableOCR,\n        onChange: () => setEnableOCR(!enableOCR)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ocr-text\",\n        children: \"Extract text from images and scanned documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Upload, {\n      sessionId: sessionId,\n      setSessionId: setSessionId,\n      setProcessedFiles: setProcessedFiles,\n      setIsLoading: setIsLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), processedFiles.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"document-list\",\n        children: processedFiles.map((filename, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: \"document-item d-flex justify-content-between align-items-center\",\n          children: [filename, /*#__PURE__*/_jsxDEV(Badge, {\n            bg: \"primary\",\n            pill: true,\n            className: \"document-badge\",\n            children: \"PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: onClearSession,\n        disabled: isLoading || processedFiles.length === 0,\n        className: \"mt-3 w-100\",\n        children: \"Clear All Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"3oo3A87uUZh1ZH6R9X7BF0H1g9M=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","Button","ListGroup","Badge","Form","Upload","jsxDEV","_jsxDEV","Fragment","_Fragment","Sidebar","processedFiles","onClearSession","isLoading","sessionId","setSessionId","setProcessedFiles","setIsLoading","_s","enableOCR","setEnableOCR","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Check","type","id","label","checked","onChange","length","map","filename","index","Item","bg","pill","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/itzju/questioning/frontend/src/components/Sidebar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, ListGroup, Badge, Form } from 'react-bootstrap';\r\nimport Upload from './Upload';\r\n\r\nconst Sidebar = ({ processedFiles, onClearSession, isLoading, sessionId, setSessionId, setProcessedFiles, setIsLoading }) => {\r\n  const [enableOCR, setEnableOCR] = useState(false);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h3>Documents</h3>\r\n      \r\n      <div className=\"ocr-switch\">\r\n        <Form.Check \r\n          type=\"switch\"\r\n          id=\"ocr-switch\"\r\n          label=\"Enable OCR\"\r\n          checked={enableOCR}\r\n          onChange={() => setEnableOCR(!enableOCR)}\r\n        />\r\n        <div className=\"ocr-text\">\r\n          Extract text from images and scanned documents\r\n        </div>\r\n      </div>\r\n      \r\n      <Upload \r\n        sessionId={sessionId} \r\n        setSessionId={setSessionId} \r\n        setProcessedFiles={setProcessedFiles} \r\n        setIsLoading={setIsLoading} \r\n      />\r\n      \r\n      {processedFiles.length > 0 && (\r\n        <>\r\n          <ListGroup className=\"document-list\">\r\n            {processedFiles.map((filename, index) => (\r\n              <ListGroup.Item key={index} className=\"document-item d-flex justify-content-between align-items-center\">\r\n                {filename}\r\n                <Badge bg=\"primary\" pill className=\"document-badge\">PDF</Badge>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n          \r\n          <Button\r\n            variant=\"outline-danger\"\r\n            onClick={onClearSession}\r\n            disabled={isLoading || processedFiles.length === 0}\r\n            className=\"mt-3 w-100\"\r\n          >\r\n            Clear All Documents\r\n          </Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}